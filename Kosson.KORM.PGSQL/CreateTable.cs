using Kosson.KORM.DB.CommandBuilder;
using System.Text;

namespace Kosson.KORM.PGSQL
{
	class CreateTable : DBCreateTable
	{
		public CreateTable(IDBCommandBuilder builder)
			: base(builder)
		{
		}

		protected override void AppendTable(StringBuilder sb)
		{
			sb.Append("IF NOT EXISTS ");
			base.AppendTable(sb);
		}

		protected override void AppendCommandText(StringBuilder sb)
		{
			if (autoincrement)
			{
				sb.AppendLine("CREATE SEQUENCE IF NOT EXISTS ");
				SequenceForTable(Builder, table).Append(sb);
				sb.AppendLine(" START WITH 1;");
			}

			base.AppendCommandText(sb);
		}

		protected override void AppendAutoIncrement(StringBuilder sb)
		{
			// Can't use GENERATED BY DEFAULT AS IDENTITY because Insert.AppendCommandText needs to update sequence when inserting records with provided ID
			sb.Append(" DEFAULT nextval('");
			SequenceForTable(Builder, table).Append(sb);
			sb.Append("')");
		}

		internal static IDBIdentifier SequenceForTable(IDBCommandBuilder builder, IDBIdentifier table)
		{
			string tableName;
			if (table is IDBDottedIdentifier dottedTable) tableName = string.Join("_", dottedTable.Fragments);
			else tableName = table.RawValue;
			return builder.Identifier(tableName + "_SEQ");
		}
	}
}
